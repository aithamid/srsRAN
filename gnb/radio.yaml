# This configuration file example shows how to configure the srsRAN Project gNB to connect to a COTS UE. As with the 
# associated tutorial, this config has been tested with a OnePlus 8T. A B210 USRP is used as the RF-frontend.   
# This config creates a TDD cell with 20 MHz bandwidth in band 78. 
# To run the srsRAN Project gNB with this config, use the following command: 
#   sudo ./gnb -c gnb_b210_20MHz_oneplus_8t.yaml

amf:
  addr: 10.53.1.2                                             # The address or hostname of the AMF.
  bind_addr: 10.53.1.3                                        # A local IP that the gNB binds to for traffic from the AMF.

ru_sdr:
  device_driver: uhd                                            # The RF driver name.
  device_args: type=x300,num_recv_frames=64,num_send_frames=64  # Optionally pass arguments to the selected RF driver.
  sync: external                                                        # Specify the sync source used by the RF.
  srate: 23.04                                                  # RF sample rate might need to be adjusted according to selected bandwidth.
  tx_gain: 20                                                  # Transmit gain of the RF might need to adjusted to the given situation.
  rx_gain: 15                                                 # Receive gain of the RF might need to adjusted to the given situation.

cell_cfg:
  dl_arfcn: 368640                    
  band: 3                             
  channel_bandwidth_MHz: 20           
  common_scs: 15                      
  plmn: "00101"                       
  tac: 7                              
  pci: 2       
  
cu_cp:
  inactivity_timer: 7200            # Sets the UE/PDU Session/DRB inactivity timer to 7200 seconds. Supported: [1 - 7200].


pcap:
  mac_enable: false                                             # Set to true to enable MAC-layer PCAPs.
  mac_filename: /tmp/gnb_mac.pcap                               # Path where the MAC PCAP is stored.
  ngap_enable: false                                            # Set to true to enable NGAP PCAPs.
  ngap_filename: /tmp/gnb_ngap.pcap                             # Path where the NGAP PCAP is stored.
  e2ap_enable: true                 # Set to true to enable E2AP PCAPs.
  e2ap_filename: /tmp/gnb_e2ap.pcap # Path where the E2AP PCAP is stored.

log:
  all_level: warning                    # Optional TEXT (warning). Sets a common log level across PHY, MAC, RLC, PDCP, RRC, SDAP, NGAP and GTPU layers. 
  phy_level: info                    # Optional TEXT (warning). Sets PHY log level.
  mac_level: debug                    # Optional TEXT (warning). Sets MAC log level.
  rlc_level: warning                    # Optional TEXT (warning). Sets RLC log level.
  pdcp_level: warning                   # Optional TEXT (warning). Sets PDCP log level.
  rrc_level: debug                   # Optional TEXT (warning). Sets RRC log level.
  sdap_level: warning                   # Optional TEXT (warning). Sets SDAP log level.
  ngap_level: warning                   # Optional TEXT (warning). Sets NGAP log level.
  gtpu_level: warning                   # Optional TEXT (warning). Sets GTPU log level.
  radio_level: debug                     # Optional TEXT (info). Sets radio log level.
  fapi_level: warning                   # Optional TEXT (warning). Sets FAPI log level.
  ofh_level: warning                    # Optional TEXT (warning). Sets Open Fronthaul log level.
  f1ap_level: warning                   # Optional TEXT (warning). Sets F1AP log level.
  f1u_level: warning                    # Optional TEXT (warning). Sets F1u log level.
  du_level: warning                     # Optional TEXT (warning). Sets DU log level.
  cu_level: warning                     # Optional TEXT (warning). Sets CU log level.
  sec_level: warning                    # Optional TEXT (warning). Sets security functions level.
  lib_level: warning                    # Optional TEXT (warning). Sets generic log level.
  hex_max_size: 0                       # Optional UINT (0). Sets maximum number of bytes to print for hex messages. Supported: [0 - 1024]
  broadcast_enabled: 0                  # Optional BOOL (0). Enables logging in the PHY and MAC layer of broadcast messages and all PRACH opportunities. Supported: [0, 1].
  phy_rx_symbols_filename:              # Optional TEXT. Print received symbols to file. Symbols will be printed if a valid path is set. Format: file path. This file can be used in the srsRAN_matlab project. 
  phy_rx_symbols_port: 0                # Optional TEXT. Set to a valid receive port number to dump the IQ symbols from that port only, or set to "all" to dump the IQ symbols from all UL receive ports. Only works if "phy_rx_symbols_filename" is set. Supported: [NON-NEGATIVE or all].
  phy_rx_symbols_prach: 0               # Optional BOOLEAN (0). Set to true to dump the IQ symbols from all the PRACH ports. Only works if "phy_rx_symbols_filename" is set. Supported: [0, 1]. 
  tracing_filename:                     # Optional TEXT. Set to a valid file name to enable tracing log. 

e2:
  enable_du_e2: true                # Enable DU E2 agent (one for each DU instance)
  e2sm_kpm_enabled: true            # Enable KPM service module
  e2sm_rc_enabled: true 
  addr: 127.0.0.1                # RIC IP address
 #bind_addr: 10.0.2.1          # A local IP that the E2 agent binds to for traffic from the RIC. ONLY required if running the RIC on a separate machine. 
  port: 36421                       # RIC port

metrics: 
  rlc_json_enable: 1                # Enable RLC metrics reporting (need to deliver measurements to E2SM_KPM service model)
  rlc_report_period: 1000           # Set reporting period to 1s
  enable_json_metrics: true       # Enable reporting metrics in JSON format
  addr: 172.19.1.4                # Metrics-server IP
  port: 55555                     # Metrics-server Port
